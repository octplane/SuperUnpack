h1. About

SuperUnpack is a ruby library coded by Pierre Baillet. Originally developped around 2006. It was uploaded to GitHub in April, 2011.

h1. HISTORY

SuperUnpack was written after I got tired of parsing EXIF, IPTC, MP3s and Palm Pilot (!) by hand. This DSL implements simple binary primitives that allows one to quickly parse a binary file and explore it via an OO interface.

h1. Ruby Documentation

Please see "the SuperUnpack rdoc":http://rubydoc.info/github/octplane/SuperUnpack/master/frames for the project RDoc.

h1. USAGE 

SuperUnpack gives you the ability transform a binary stream into a structured set of ruby object.

The objects are defined via a declaration of their structure that maps to the underlying binary structure AND the semantic meaning of the data:
<pre>
<code>
class CategoryInfo < Complex
   Char :foo, 11 
   PascalString :long_name
   Blong :bar
   PascalString :short_name
end
</code>
</pre>

This structure declares a binary stream that starts with 11 bytes of data, then a PascalString (see below for format description), and long and another PascalString.

The content of the datastructure is accessible like this:
<pre>
<code>
ds = CategoryInfo.new
ds.parse(my_binary_string)
puts ds.long_name
</code>
</pre>


h2. Supported Primitives



* <code>Uint</code>
* <code>Blong</code>
* <code>BShort</code>
* <code>Llong</code>
* <code>Lshort</code>
* <code>Lshort</code>
* <code>Char</code>
* <code>CString</code>
* <code>PascalString</code>


h1. LIMITATIONS

* Poor loop and complex datastructure support
* No write support